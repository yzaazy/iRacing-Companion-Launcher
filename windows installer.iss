; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AC6B1A17-D640-431A-8A9B-0CF697BD5075}
AppName=iRacing Companion Launcher
AppVersion=2.0.0
;AppVerName=iRacing Companion Launcher 1.4
AppPublisher=Tobias Termeczky
DefaultDirName={autopf}\iRacing Companion Launcher
UsePreviousAppDir=yes
UninstallDisplayName=iRacing Companion Launcher
UninstallDisplayIcon={app}\iRacing Companion Launcher.exe
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputDir=C:\Users\tobia\Documents\Scripts\installer_output
OutputBaseFilename=iRacing_Companion_Launcher_Setup
SetupIconFile=C:\Users\tobia\Documents\Scripts\iRCL.ico
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin
DirExistsWarning=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\tobia\Documents\Scripts\dist\iRacing Companion Launcher\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\iRacing Companion Launcher"; Filename: "{app}\iRacing Companion Launcher.exe"
Name: "{autodesktop}\iRacing Companion Launcher"; Filename: "{app}\iRacing Companion Launcher.exe"; Tasks: desktopicon

[Run]
Filename: "{app}\iRacing Companion Launcher.exe"; Description: "{cm:LaunchProgram,iRacing Companion Launcher}"; Flags: nowait postinstall skipifsilent

[Code]
function GetUninstallString(): String;
var
  UninstallKey: String;
  UninstallString: String;
begin
  UninstallKey := 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{AC6B1A17-D640-431A-8A9B-0CF697BD5075}_is1';
  UninstallString := '';

  // Check HKLM (system-wide installation)
  if not RegQueryStringValue(HKLM, UninstallKey, 'UninstallString', UninstallString) then
  begin
    // Check HKCU (current user installation)
    RegQueryStringValue(HKCU, UninstallKey, 'UninstallString', UninstallString);
  end;

  Result := UninstallString;
end;

function IsUpgrade(): Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

function UninstallOldVersion(): Integer;
var
  UninstallString: String;
  ResultCode: Integer;
begin
  Result := 0;
  UninstallString := GetUninstallString();

  if UninstallString <> '' then
  begin
    UninstallString := RemoveQuotes(UninstallString);

    if Exec(UninstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES /DIR="{app}"', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
      Result := ResultCode
    else
      Result := -1;
  end;
end;

function InitializeSetup(): Boolean;
var
  InstalledVersion: String;
  UninstallKey: String;
  Response: Integer;
  Message: String;
begin
  Result := True;

  if IsUpgrade() then
  begin
    UninstallKey := 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{AC6B1A17-D640-431A-8A9B-0CF697BD5075}_is1';

    // Try to get the installed version
    if not RegQueryStringValue(HKLM, UninstallKey, 'DisplayVersion', InstalledVersion) then
      RegQueryStringValue(HKCU, UninstallKey, 'DisplayVersion', InstalledVersion);

    // Check if it's an upgrade or reinstall
    if InstalledVersion = '{#SetupSetting("AppVersion")}' then
    begin
      // Same version - reinstall
      Message := 'iRacing Companion Launcher version ' + InstalledVersion + ' is already installed.' + #13#10#13#10 +
                 'Do you want to reinstall?';
    end
    else
    begin
      // Different version - upgrade
      Message := 'iRacing Companion Launcher version ' + InstalledVersion + ' is currently installed.' + #13#10#13#10 +
                 'Do you want to upgrade to version {#SetupSetting("AppVersion")}?';
    end;

    Response := MsgBox(Message, mbConfirmation, MB_YESNO);

    if Response = IDYES then
    begin
      if UninstallOldVersion() <> 0 then
      begin
        MsgBox('Failed to uninstall the previous version. Please uninstall it manually before continuing.', mbError, MB_OK);
        Result := False;
      end;
    end
    else
    begin
      Result := False;
    end;
  end;
end;

